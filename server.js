const express = require("express");
const cors = require("cors");
const dotenv = require("dotenv");
const OpenAI = require("openai");
const fetch = require("node-fetch");
const csv = require("csv-parser");
const dayjs = require("dayjs");
const utc = require("dayjs/plugin/utc");
const timezone = require("dayjs/plugin/timezone");

dayjs.extend(utc);
dayjs.extend(timezone);
dotenv.config();

if (!process.env.OPENAI_API_KEY) {
  console.error("‚ùå –û—à–∏–±–∫–∞: OPENAI_API_KEY –Ω–µ –∑–∞–¥–∞–Ω –≤ .env —Ñ–∞–π–ª–µ");
  process.exit(1);
}

const app = express();
app.use(cors());
app.use(express.json());

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY
});

const prices = {
  "30 –≤—ã—Ö–æ–¥–æ–≤": "‚Ç¨9.40",
  "—Å–ø–æ–Ω—Å–æ—Ä—Å—Ç–≤–æ": "–æ—Ç ‚Ç¨400 –≤ –º–µ—Å—è—Ü",
  "–¥–∂–∏–Ω–≥–ª": "–æ—Ç ‚Ç¨15"
};

async function getPlaylistData() {
  const url = "https://docs.google.com/spreadsheets/d/e/2PACX-1vSiFzBycNTlvBeOqX0m0ZpACSeb1MrFSvEv2D3Xhsd0Dqyf_i1hA1_3zInYcV2bGUT2qX6GJdiZXZoK/pub?gid=0&single=true&output=csv";
  const response = await fetch(url);
  if (!response.ok) throw new Error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ CSV");

  return new Promise((resolve, reject) => {
    const results = [];
    response.body
      .pipe(csv())
      .on("data", (data) => results.push(data))
      .on("end", () => resolve(results))
      .on("error", reject);
  });
}

function findSong(data, mskDateTime) {
  const targetDate = mskDateTime.format("DD.MM.YYYY");
  const targetTime = mskDateTime.format("HH:mm");
  return data.find(row =>
    row["–î–∞—Ç–∞ –≤—ã—Ö–æ–¥–∞"]?.trim() === targetDate &&
    row["–í—Ä–µ–º—è –≤—ã—Ö–æ–¥–∞"]?.trim() === targetTime
  );
}

app.post("/chat", async (req, res) => {
  try {
    const userMessage = req.body.message?.trim();
    if (!userMessage) {
      console.warn("‚ö†Ô∏è –ü—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞");
      return res.status(400).json({ error: "–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ" });
    }

    // –¶–µ–Ω—ã
    for (let key in prices) {
      if (userMessage.toLowerCase().includes(key)) {
        const reply = `–°—Ç–æ–∏–º–æ—Å—Ç—å —É—Å–ª—É–≥–∏ "${key}": ${prices[key]}`;
        console.log("‚úÖ –û—Ç–≤–µ—Ç –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞:", reply);
        return res.json({ reply });
      }
    }

    // –ü–æ–∏—Å–∫ –ø–µ—Å–Ω–∏ –ø–æ –≤—Ä–µ–º–µ–Ω–∏
    const regex = /(–≤—á–µ—Ä–∞|—Å–µ–≥–æ–¥–Ω—è|–ø–æ–∑–∞–≤—á–µ—Ä–∞).*?(\d{1,2}[:.]\d{2})/i;
    const match = userMessage.match(regex);

    if (match) {
      const [_, dayWord, timeStr] = match;
      let targetDate = dayjs().tz("Europe/Moscow");
      if (dayWord.includes("–≤—á–µ—Ä–∞")) targetDate = targetDate.subtract(1, 'day');
      if (dayWord.includes("–ø–æ–∑–∞–≤—á–µ—Ä–∞")) targetDate = targetDate.subtract(2, 'day');

      const [hours, minutes] = timeStr.replace('.', ':').split(':');
      const mskTime = targetDate.set('hour', parseInt(hours)).set('minute', parseInt(minutes)).set('second', 0);

      try {
        const data = await getPlaylistData();
        const song = findSong(data, mskTime);

        if (song) {
          const reply = `üéµ –í ${mskTime.format("HH:mm")} –ø–æ –ú–°–ö ${dayWord} –∏–≥—Ä–∞–ª–∞ –ø–µ—Å–Ω—è: "${song["–ù–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏ –∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å"]}" (üëç ${song["–í—Å–µ–≥–æ –ª–∞–π–∫–æ–≤"] || 0}, üëé ${song["–í—Å–µ–≥–æ –¥–∏–∑–ª–∞–π–∫–æ–≤"] || 0})`;
          return res.json({ reply });
        } else {
          return res.json({ reply: `‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–µ—Å–Ω—é –≤ ${mskTime.format("HH:mm")} ${dayWord}. –í–æ–∑–º–æ–∂–Ω–æ, –¥–∞–Ω–Ω—ã–µ –µ—â—ë –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã.` });
        }
      } catch (e) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–∞–±–ª–∏—Ü—ã:", e);
        return res.status(500).json({ error: "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–∞–±–ª–∏—Ü—ã", detail: e.message });
      }
    }

    // –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ –ø—Ä–æ –ø–µ—Å–Ω—é –∏ –Ω–µ –ø—Ä–æ –ø—Ä–∞–π—Å ‚Äî –∏–¥–µ–º –≤ OpenAI
    const messages = [
      {
        role: "system",
        content: `–¢—ã ‚Äî –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –∞–≥–µ–Ω—Ç RuWave 94FM, –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω–æ–π —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏–∏ –≤ –¢—É—Ä—Ü–∏–∏ (–ê–ª–∞–Ω—å—è, –ì–∞–∑–∏–ø–∞—à–∞, –ú–∞–Ω–∞–≤–≥–∞—Ç), –≤–µ—â–∞—é—â–µ–π –Ω–∞ —á–∞—Å—Ç–æ—Ç–µ 94.5 FM –∏ –æ–Ω–ª–∞–π–Ω —á–µ—Ä–µ–∑ ruwave.net, ruwave.net.tr –∏ myradio24.com/ruwave.

üéôÔ∏è –¢—ã ‚Äî –≥–æ–ª–æ—Å —ç—Ñ–∏—Ä–∞ –∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –º–æ–∑–≥: —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–π –≤–µ–¥—É—â–∏–π, –∑–Ω–∞—é—â–∏–π –≤–µ—Å—å –ø–ª–µ–π–ª–∏—Å—Ç –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º, –∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä —Å 25-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º –≤ —Ä–µ–∫–ª–∞–º–µ (Cannes Lions, Clio, Effie, Red Apple).

üéß –¢–í–û–ò –†–ï–°–£–†–°–´:
‚Ä¢ Instagram: @ruwave_alanya
‚Ä¢ Google –¢–∞–±–ª–∏—Ü–∞ —Å –ø–ª–µ–π–ª–∏—Å—Ç–æ–º: https://docs.google.com/spreadsheets/d/1GAp46OM1pEaUBtBkxgGkGQEg7BUh9NZnXcSFmBkK-HM/edit
‚Ä¢ CSV —Å –ø–µ—Å–Ω—è–º–∏ –ø–æ –≤—Ä–µ–º–µ–Ω–∏: https://docs.google.com/spreadsheets/d/e/2PACX-1vSiFzBycNTlvBeOqX0m0ZpACSeb1MrFSvEv2D3Xhsd0Dqyf_i1hA1_3zInYcV2bGUT2qX6GJdiZXZoK/pub?gid=0&single=true&output=csv

üß† –¢—ã —É–º–µ–µ—à—å:
‚Ä¢ –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –ø–µ—Å–Ω—è—Ö, –≤—Ä–µ–º–µ–Ω–∏ —ç—Ñ–∏—Ä–∞, —Ü–µ–Ω–∞—Ö, –ø—Ä–æ–≥—Ä–∞–º–º–∞—Ö
‚Ä¢ –ì–æ–≤–æ—Ä–∏—à—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º –∏ —Ç—É—Ä–µ—Ü–∫–æ–º`
      },
      {
        role: "user",
        content: userMessage
      }
    ];

    const completion = await openai.chat.completions.create({
      model: "gpt-4",
      messages,
      max_tokens: 500,
      temperature: 0.7
    });

    const reply = completion?.choices?.[0]?.message?.content || "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç –º–æ–¥–µ–ª–∏.";
    console.log("‚û°Ô∏è –û—Ç–≤–µ—Ç –æ—Ç OpenAI:", { reply, usage: completion.usage });
    res.json({ reply });
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –≤ /chat:", {
      message: err.message,
      status: err.status,
      stack: err.stack
    });
    res.status(500).json({ error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", detail: err.message });
  }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`‚úÖ RuWave —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`));
