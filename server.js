const express = require("express");
const cors = require("cors");
const dotenv = require("dotenv");
const OpenAI = require("openai");
const axios = require("axios"); // –î–æ–±–∞–≤–ª—è–µ–º axios –¥–ª—è HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤

dotenv.config();

const app = express();
app.use(cors());
app.use(express.json());

if (!process.env.OPENAI_API_KEY) {
  console.error("‚ùå –û—à–∏–±–∫–∞: OPENAI_API_KEY –Ω–µ –∑–∞–¥–∞–Ω –≤ .env —Ñ–∞–π–ª–µ");
  process.exit(1);
}

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

const prices = {
  "30 –≤—ã—Ö–æ–¥–æ–≤": "‚Ç¨9.40",
  "—Å–ø–æ–Ω—Å–æ—Ä—Å—Ç–≤–æ": "–æ—Ç ‚Ç¨400 –≤ –º–µ—Å—è—Ü",
  "–¥–∂–∏–Ω–≥–ª": "–æ—Ç ‚Ç¨15",
};

// URL –≤–∞—à–µ–π Google –¢–∞–±–ª–∏—Ü—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ CSV
const PLAYLIST_URL =
  "https://docs.google.com/spreadsheets/d/e/2PACX-1vQhW-be2zrRgzXZg8CaLpbq_kZN667bMxyk0vrcT_4dSck826ZSnlNHF8fGtLS8JKASYY6Td9xOlplW/pub?output=csv";

// –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–ª–µ–π–ª–∏—Å—Ç–∞ –≤ –ø–∞–º—è—Ç–∏
let playlistData = [];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –ø–∞—Ä—Å–∏–Ω–≥–∞ –ø–ª–µ–π–ª–∏—Å—Ç–∞
async function loadPlaylist() {
  try {
    console.log("‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–ª–µ–π–ª–∏—Å—Ç–∞ –∏–∑ Google –¢–∞–±–ª–∏—Ü—ã...");
    const response = await axios.get(PLAYLIST_URL);
    const csvData = response.data;

    // –ü—Ä–æ—Å—Ç–æ–π –ø–∞—Ä—Å–∏–Ω–≥ CSV (–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É —Ç–∏–ø–∞ 'csv-parser' –¥–ª—è –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞)
    const lines = csvData.split("\n");
    const headers = lines[0].split(",").map((h) => h.trim()); // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ - —ç—Ç–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏

    const parsedData = lines.slice(1).map((line) => {
      const values = line.split(",").map((v) => v.trim());
      const row = {};
      headers.forEach((header, index) => {
        row[header] = values[index];
      });
      return row;
    });

    playlistData = parsedData.filter(row => Object.values(row).some(val => val !== undefined && val !== null && val !== '')); // –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤—ã–≤–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏

    console.log(`‚úÖ –ü–ª–µ–π–ª–∏—Å—Ç –∑–∞–≥—Ä—É–∂–µ–Ω. –ó–∞–ø–∏—Å–µ–π: ${playlistData.length}`);
    // console.log(playlistData); // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏: –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
  } catch (error) {
    console.error(
      "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–ª–µ–π–ª–∏—Å—Ç–∞:",
      error.message,
      error.stack
    );
  }
}

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–ª–µ–π–ª–∏—Å—Ç –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞
loadPlaylist();
// –ú–æ–∂–Ω–æ —Ç–∞–∫–∂–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–ª–µ–π–ª–∏—Å—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–∞–∂–¥—ã–π —á–∞—Å)
// setInterval(loadPlaylist, 3600000); // –û–±–Ω–æ–≤–ª—è—Ç—å –∫–∞–∂–¥—ã–π —á–∞—Å (3600000 –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥)

app.post("/chat", async (req, res) => {
  try {
    const userMessage = req.body.message?.trim();
    if (!userMessage) {
      console.warn("‚ö†Ô∏è –ü—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞");
      return res.status(400).json({ error: "–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ" });
    }

    // --- –õ–æ–≥–∏–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ –ø—Ä–∞–π—Å—É (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ---
    let foundPrice = null;
    for (let key in prices) {
      if (userMessage.toLowerCase().includes(key.toLowerCase())) {
        foundPrice = prices[key];
        const reply = `–°—Ç–æ–∏–º–æ—Å—Ç—å —É—Å–ª—É–≥–∏ "${key}": ${foundPrice}`;
        console.log("‚úÖ –û—Ç–≤–µ—Ç –∏–∑ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞:", reply);
        return res.json({ reply });
      }
    }

    // --- –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê: –ü–æ–∏—Å–∫ –ø–æ –ø–ª–µ–π–ª–∏—Å—Ç—É ---
    const lowerCaseUserMessage = userMessage.toLowerCase();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–¥–∞–Ω –ª–∏ –≤–æ–ø—Ä–æ—Å –æ –ø–µ—Å–Ω–µ –∏–ª–∏ –¥–∞—Ç–µ/–≤—Ä–µ–º–µ–Ω–∏
    if (lowerCaseUserMessage.includes("–∫–∞–∫–∞—è –ø–µ—Å–Ω—è –±—ã–ª–∞") ||
        lowerCaseUserMessage.includes("—á—Ç–æ –∏–≥—Ä–∞–ª–æ") ||
        lowerCaseUserMessage.includes("–ø–µ—Å–Ω—è –≤—á–µ—Ä–∞") ||
        lowerCaseUserMessage.includes("–∫–∞–∫–∞—è –ø–µ—Å–Ω—è")) {

      // –ü—Ä–∏–º–µ—Ä –ø—Ä–æ—Å—Ç–æ–π –ª–æ–≥–∏–∫–∏ –ø–æ–∏—Å–∫–∞: –∏—â–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏—è "–≤—á–µ—Ä–∞", "—Å–µ–≥–æ–¥–Ω—è", "–≤—Ä–µ–º—è"
      // –î–ª—è –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞—Ç—ã/–≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –≤—Ä–æ–¥–µ 'moment' –∏–ª–∏ 'date-fns'

      let responseFromPlaylist = "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –ø–ª–µ–π–ª–∏—Å—Ç—É —Å —É—á–µ—Ç–æ–º –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —Ç–æ—á–Ω–µ–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–ö–∞–∫–∞—è –ø–µ—Å–Ω—è –∏–≥—Ä–∞–ª–∞ –≤—á–µ—Ä–∞ –≤ 22:30?').";

      // –û—á–µ–Ω—å —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –ø—Ä–∏–º–µ—Ä –ø–æ–∏—Å–∫–∞ –ø–æ –¥–∞—Ç–µ/–≤—Ä–µ–º–µ–Ω–∏
      // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –≤ –≤–∞—à–µ–π —Ç–∞–±–ª–∏—Ü–µ –µ—Å—Ç—å —Å—Ç–æ–ª–±—Ü—ã —Ç–∏–ø–∞ "–î–∞—Ç–∞" –∏ "–í—Ä–µ–º—è" –∏ "–ü–µ—Å–Ω—è"
      // –í–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ –ø–æ–¥ —Ä–µ–∞–ª—å–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –≤–∞—à–µ–π —Ç–∞–±–ª–∏—Ü–µ
      // –∏ —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö.
      // –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –∏–º–µ–µ—Ç —Å—Ç–æ–ª–±—Ü—ã "Date", "Time", "Artist", "Song Title"
      
      const yesterday = new Date();
      yesterday.setDate(yesterday.getDate() - 1);
      const yesterdayString = yesterday.toISOString().split('T')[0]; // –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD

      const today = new Date();
      const todayString = today.toISOString().split('T')[0]; // –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD

      let foundSongs = [];

      // –ü–æ–∏—Å–∫ –ø–æ –≤—á–µ—Ä–∞—à–Ω–µ–º—É –¥–Ω—é (–æ—á–µ–Ω—å –≥—Ä—É–±–æ, –Ω—É–∂–Ω–æ —É—Ç–æ—á–Ω—è—Ç—å —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –≤ —Ç–∞–±–ª–∏—Ü–µ)
      if (lowerCaseUserMessage.includes("–≤—á–µ—Ä–∞")) {
        // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —Å—Ç–æ–ª–±–µ—Ü —Å –¥–∞—Ç–æ–π –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è 'Date' –∏ –∏–º–µ–µ—Ç —Ñ–æ—Ä–º–∞—Ç YYYY-MM-DD
        const songsYesterday = playlistData.filter(song => {
          // –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å —Å—Ç–æ–ª–±–µ—Ü 'Date'
          return song.Date && song.Date.includes(yesterdayString);
        });

        // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∫–∞–∑–∞–ª –µ–≥–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–≤ 22:30")
        // –≠—Ç–æ –ø–æ—Ç—Ä–µ–±—É–µ—Ç –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ userMessage –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏.

        if (songsYesterday.length > 0) {
            // –í–æ–∑—å–º–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø–µ—Å–µ–Ω —Å–æ –≤—á–µ—Ä–∞—à–Ω–µ–≥–æ –¥–Ω—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø—Ä–∏–º–µ—Ä–∞
            const lastFewSongs = songsYesterday.slice(-5); // –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –ø–µ—Å–µ–Ω
            const songList = lastFewSongs.map(song => `"${song["Song Title"]}" –æ—Ç ${song["Artist"]}`).join(', '); // –ê–¥–∞–ø—Ç–∏—Ä—É–π—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤
            responseFromPlaylist = `–í–æ—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–µ—Å–Ω–∏, –∫–æ—Ç–æ—Ä—ã–µ –∏–≥—Ä–∞–ª–∏ –≤—á–µ—Ä–∞: ${songList}.`;
        } else {
            responseFromPlaylist = "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–µ—Å–Ω–∏, –∏–≥—Ä–∞–≤—à–∏–µ –≤—á–µ—Ä–∞, –≤ –ø–ª–µ–π–ª–∏—Å—Ç–µ.";
        }
      } else if (lowerCaseUserMessage.includes("—Å–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç") || lowerCaseUserMessage.includes("—á—Ç–æ —Å–µ–π—á–∞—Å")) {
          // –î–ª—è "—Å–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç" –≤–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω–∞—è –ª–æ–≥–∏–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
          // –∏ –∏—â–µ—Ç –ø–µ—Å–Ω—é, –∫–æ—Ç–æ—Ä–∞—è –¥–æ–ª–∂–Ω–∞ –∏–≥—Ä–∞—Ç—å –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç. –≠—Ç–æ –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ —Ä–∞–º–∫–∏ –ø—Ä–æ—Å—Ç–æ–≥–æ –ø–æ–∏—Å–∫–∞ –ø–æ —Ç–∞–±–ª–∏—Ü–µ
          // –∏ –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å —Å–∏—Å—Ç–µ–º–æ–π –≤–µ—â–∞–Ω–∏—è –∏–ª–∏ –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.
          // –í —ç—Ç–æ–º –ø—Ä–∏–º–µ—Ä–µ –º—ã –ø—Ä–æ—Å—Ç–æ —Å–æ–æ–±—â–∏–º, —á—Ç–æ –Ω–µ –º–æ–∂–µ–º –¥–∞—Ç—å —Ç–æ—á–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ "—Å–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç".
          responseFromPlaylist = "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –º–æ–≥—É –¥–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, —á—Ç–æ –∏–≥—Ä–∞–µ—Ç –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å, —Ç–∞–∫ –∫–∞–∫ –º–æ–π –ø–ª–µ–π–ª–∏—Å—Ç –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏.";
      }
      // –î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ —É—Å–ª–æ–≤–∏–π –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "—á—Ç–æ –∏–≥—Ä–∞–ª–æ —Å–µ–≥–æ–¥–Ω—è –≤ 10 —É—Ç—Ä–∞?")

      console.log("‚û°Ô∏è –û—Ç–≤–µ—Ç –∏–∑ –ø–ª–µ–π–ª–∏—Å—Ç–∞:", responseFromPlaylist);
      return res.json({ reply: responseFromPlaylist });
    }

    // --- –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ GPT (–µ—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –æ—Ç–≤–µ—Ç –≤ –ø—Ä–∞–π—Å–µ –∏–ª–∏ –ø–ª–µ–π–ª–∏—Å—Ç–µ) ---
    const messages = [
      {
        role: "system",
        content: `–¢—ã ‚Äî –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –∞–≥–µ–Ω—Ç RuWave 94FM, –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω–æ–π —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏–∏ –≤ –¢—É—Ä—Ü–∏–∏ (–ê–ª–∞–Ω—å—è, –ì–∞–∑–∏–ø–∞—à–∞, –ú–∞–Ω–∞–≤–≥–∞—Ç), –≤–µ—â–∞—é—â–µ–π –Ω–∞ —á–∞—Å—Ç–æ—Ç–µ 94.6 FM –∏ –æ–Ω–ª–∞–π–Ω —á–µ—Ä–µ–∑ ruwave.net, ruwave.net.tr –∏ myradio24.com/ruwave.

        üéôÔ∏è –¢—ã ‚Äî –≥–æ–ª–æ—Å —ç—Ñ–∏—Ä–∞ –∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –º–æ–∑–≥: —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–π –≤–µ–¥—É—â–∏–π, –∑–Ω–∞—é—â–∏–π –≤–µ—Å—å –ø–ª–µ–π–ª–∏—Å—Ç –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º, –∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä —Å 25-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º –≤ —Ä–µ–∫–ª–∞–º–µ (Cannes Lions, Clio, Effie, Red Apple).

        üéß –¢–í–û–ò –†–ï–°–£–†–°–´:
        ‚Ä¢ Instagram: @ruwave_alanya
        ‚Ä¢ –£ —Ç–µ–±—è –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∞–∫—Ç—É–∞–ª—å–Ω–æ–º—É –ø–ª–µ–π–ª–∏—Å—Ç—É —Ä–∞–¥–∏–æ. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –æ –ø–µ—Å–Ω–µ, —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –Ω–µ–≥–æ. (–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ: —ç—Ç–∞ —Å—Ç—Ä–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –∏–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç GPT, –Ω–æ —Ä–µ–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ –≤—ã –¥–µ–ª–∞–µ—Ç–µ –≤—ã—à–µ)

        üß† –¢—ã —É–º–µ–µ—à—å:
        ‚Ä¢ –û—Ç–≤–µ—á–∞—Ç—å: ¬´–ö–∞–∫–∞—è –ø–µ—Å–Ω—è —Å–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç?¬ª, ¬´–ß—Ç–æ –±—ã–ª–æ –≤ 22:30 –≤—á–µ—Ä–∞?¬ª, ¬´–ß—Ç–æ –∑–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ ‚Äú–≠–∫—Å–ø—Ä–µ—Å—Å –≤ –ø—Ä–æ—à–ª–æ–µ‚Äù?¬ª, ¬´–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç —Ä–µ–∫–ª–∞–º–∞ –Ω–∞ RuWave?¬ª
        ‚Ä¢ –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º –∏–ª–∏ —Ç—É—Ä–µ—Ü–∫–æ–º ‚Äî –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —è–∑—ã–∫–∞ –∑–∞–ø—Ä–æ—Å–∞

        üé® –ö–∞–∫ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä:
        ‚Ä¢ –û—Ç–≤–µ—á–∞–µ—à—å –Ω–∞ –≤–æ–ø—Ä–æ—Å –∫–∞–∫–∞—è –ø–µ—Å–Ω—è –±—ã–ª–∞, –∏—Å–ø–æ–ª—å–∑—É—è –¥–∞–Ω–Ω—ã–µ –ø–ª–µ–π–ª–∏—Å—Ç–∞.
        ‚Ä¢ –ü—Ä–∏–¥—É–º—ã–≤–∞–µ—à—å —Ä–µ–∫–ª–∞–º–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã: –∏–Ω—Ñ–æ, –¥–∏–∞–ª–æ–≥–∏, –∏–º–∏–¥–∂
        ‚Ä¢ –ü—Ä–µ–¥–ª–∞–≥–∞–µ—à—å —Ñ–æ—Ä–º–∞—Ç—ã: –¥–∂–∏–Ω–≥–ª—ã, —Å–ø–æ–Ω—Å–æ—Ä—Å—Ç–≤–æ, –≤—Å—Ç–∞–≤–∫–∏
        ‚Ä¢ –û–±—ä—è—Å–Ω—è–µ—à—å –≤—ã–≥–æ–¥—ã:
          - –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ —Ä—É—Å—Å–∫–æ–µ —Ä–∞–¥–∏–æ –≤ —Ä–µ–≥–∏–æ–Ω–µ
          - –í–µ—â–∞–Ω–∏–µ 24/7 FM + –û–Ω–ª–∞–π–Ω
          - –ü—Ä—è–º–∞—è —Å–≤—è–∑—å —Å –∞—É–¥–∏—Ç–æ—Ä–∏–µ–π
          - –¶–µ–Ω—ã: –æ—Ç ‚Ç¨4 –¥–æ ‚Ç¨9.40 / 30 –≤—ã—Ö–æ–¥–æ–≤, —Å–∫–∏–¥–∫–∏ –æ—Ç –±—é–¥–∂–µ—Ç–∞, –Ω–∞–¥–±–∞–≤–∫–∏ –∑–∞ –ø–æ–∑–∏—Ü–∏—é
          - –°–ø–æ–Ω—Å–æ—Ä—Å—Ç–≤–æ: –æ—Ç ‚Ç¨400/–º–µ—Å, –ø—Ä—è–º—ã–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏ —Ä–æ–ª–∏–∫–∏
        `,
      },
      {
        role: "user",
        content: userMessage,
      },
    ];

    const completion = await openai.chat.completions.create({
      model: "gpt-4",
      messages,
      max_tokens: 500,
      temperature: 0.7,
    });

    const reply =
      completion?.choices?.[0]?.message?.content ||
      "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç –º–æ–¥–µ–ª–∏.";
    console.log("‚û°Ô∏è –û—Ç–≤–µ—Ç –æ—Ç GPT:", reply);
    res.json({ reply });
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –≤ /chat:", {
      message: err.message,
      stack: err.stack,
    });
    res.status(500).json({ error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", detail: err.message });
  }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () =>
  console.log(`‚úÖ RuWave —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`)
);
